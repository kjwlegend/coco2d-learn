{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","onLoad","jumpAction","setJumpAction","node","runAction","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","start","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","event","keyCode","macro","KEY","a","d","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        // 跳跃音效资源\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction)\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);   \r\n    },\r\n    onDestroy () {\r\n        // 取消键盘输入监听\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // 不断重复, 而且每次完成落地动作后调用回调来播放声音\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n\r\n    playJumpSound: function() {\r\n        // 调用声音引擎播放生硬\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n\r\n    update: function(dt) {\r\n        //根据当前加速度方向每帧的更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n        //根据当前速度更新助教的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n});\r\n"]}